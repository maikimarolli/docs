(window.webpackJsonp=window.webpackJsonp||[]).push([[39],{126:function(e,t,a){"use strict";a.d(t,"a",(function(){return p})),a.d(t,"b",(function(){return u}));var n=a(0),r=a.n(n);function b(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){b(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function c(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},b=Object.keys(e);for(n=0;n<b.length;n++)a=b[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var b=Object.getOwnPropertySymbols(e);for(n=0;n<b.length;n++)a=b[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var s=r.a.createContext({}),o=function(e){var t=r.a.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},p=function(e){var t=o(e.components);return r.a.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},O=r.a.forwardRef((function(e,t){var a=e.components,n=e.mdxType,b=e.originalType,l=e.parentName,s=c(e,["components","mdxType","originalType","parentName"]),p=o(a),O=n,u=p["".concat(l,".").concat(O)]||p[O]||d[O]||b;return a?r.a.createElement(u,i(i({ref:t},s),{},{components:a})):r.a.createElement(u,i({ref:t},s))}));function u(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var b=a.length,l=new Array(b);l[0]=O;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i.mdxType="string"==typeof e?e:n,l[1]=i;for(var s=2;s<b;s++)l[s]=a[s];return r.a.createElement.apply(null,l)}return r.a.createElement.apply(null,a)}O.displayName="MDXCreateElement"},127:function(e,t,a){"use strict";var n=a(0),r=a(20);t.a=function(){var e=Object(n.useContext)(r.a);if(null===e)throw new Error("Docusaurus context not provided");return e}},128:function(e,t,a){"use strict";function n(e){var t,a,r="";if("string"==typeof e||"number"==typeof e)r+=e;else if("object"==typeof e)if(Array.isArray(e))for(t=0;t<e.length;t++)e[t]&&(a=n(e[t]))&&(r&&(r+=" "),r+=a);else for(t in e)e[t]&&(r&&(r+=" "),r+=t);return r}t.a=function(){for(var e,t,a=0,r="";a<arguments.length;)(e=arguments[a++])&&(t=n(e))&&(r&&(r+=" "),r+=t);return r}},129:function(e,t,a){"use strict";a.d(t,"b",(function(){return b})),a.d(t,"a",(function(){return l}));var n=a(127),r=a(134);function b(){var e=Object(n.a)().siteConfig,t=(e=void 0===e?{}:e).baseUrl,a=void 0===t?"/":t,b=e.url;return{withBaseUrl:function(e,t){return function(e,t,a,n){var b=void 0===n?{}:n,l=b.forcePrependBaseUrl,i=void 0!==l&&l,c=b.absolute,s=void 0!==c&&c;if(!a)return a;if(a.startsWith("#"))return a;if(Object(r.b)(a))return a;if(i)return t+a;var o=!a.startsWith(t)?t+a.replace(/^\//,""):a;return s?e+o:o}(b,a,e,t)}}}function l(e,t){return void 0===t&&(t={}),(0,b().withBaseUrl)(e,t)}},130:function(e,t,a){"use strict";var n=a(0),r=Object(n.createContext)(void 0);t.a=r},131:function(e,t,a){"use strict";var n=a(0),r=a(130);t.a=function(){var e=Object(n.useContext)(r.a);if(null==e)throw new Error("`useUserPreferencesContext` is used outside of `Layout` Component.");return e}},132:function(e,t,a){"use strict";var n=a(0),r=a.n(n),b=a(131),l=a(128),i=a(48),c=a.n(i),s=37,o=39;t.a=function(e){var t=e.block,a=e.children,i=e.defaultValue,p=e.values,d=e.groupId,O=Object(b.a)(),u=O.tabGroupChoices,j=O.setTabGroupChoices,m=Object(n.useState)(i),h=m[0],f=m[1],N=Object(n.useState)(!1),g=N[0],v=N[1];if(null!=d){var y=u[d];null!=y&&y!==h&&p.some((function(e){return e.value===y}))&&f(y)}var T=function(e){f(e),null!=d&&j(d,e)},w=[],E=function(e){e.metaKey||e.altKey||e.ctrlKey||v(!0)},C=function(){v(!1)};return Object(n.useEffect)((function(){window.addEventListener("keydown",E),window.addEventListener("mousedown",C)}),[]),r.a.createElement("div",null,r.a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:Object(l.a)("tabs",{"tabs--block":t})},p.map((function(e){var t=e.value,a=e.label;return r.a.createElement("li",{role:"tab",tabIndex:0,"aria-selected":h===t,className:Object(l.a)("tabs__item",c.a.tabItem,{"tabs__item--active":h===t}),style:g?{}:{outline:"none"},key:t,ref:function(e){return w.push(e)},onKeyDown:function(e){!function(e,t,a){switch(a.keyCode){case o:!function(e,t){var a=e.indexOf(t)+1;e[a]?e[a].focus():e[0].focus()}(e,t);break;case s:!function(e,t){var a=e.indexOf(t)-1;e[a]?e[a].focus():e[e.length-1].focus()}(e,t)}}(w,e.target,e),E(e)},onFocus:function(){return T(t)},onClick:function(){T(t),v(!1)},onPointerDown:function(){return v(!1)}},a)}))),r.a.createElement("div",{role:"tabpanel",className:"margin-vert--md"},n.Children.toArray(a).filter((function(e){return e.props.value===h}))[0]))}},133:function(e,t,a){"use strict";var n=a(0),r=a.n(n);t.a=function(e){return r.a.createElement("div",null,e.children)}},134:function(e,t,a){"use strict";function n(e){return!0===/^(\w*:|\/\/)/.test(e)}function r(e){return void 0!==e&&!n(e)}a.d(t,"b",(function(){return n})),a.d(t,"a",(function(){return r}))},95:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return c})),a.d(t,"metadata",(function(){return s})),a.d(t,"rightToc",(function(){return o})),a.d(t,"default",(function(){return d}));var n=a(2),r=a(6),b=(a(0),a(126)),l=a(132),i=a(133),c=(a(129),{title:"Endpoints"}),s={unversionedId:"files_endpoints",id:"files_endpoints",isDocsHomePage:!1,title:"Endpoints",description:"[1]//github.com/Leaf-Agriculture/Leaf-quickstart-Postman-collection",source:"@site/docs/files_endpoints.md",permalink:"/docs/docs/files_endpoints",editUrl:"https://github.com/Leaf-Agriculture/docs/tree/master/docs/files_endpoints.md",sidebar:"docs",previous:{title:"Overview",permalink:"/docs/docs/files_overview"},next:{title:"Sample responses",permalink:"/docs/docs/files_sample_output"}},o=[{value:"About",id:"about",children:[{value:"Get all files",id:"get-all-files",children:[]},{value:"Get a file",id:"get-a-file",children:[]},{value:"Get a file summary",id:"get-a-file-summary",children:[]},{value:"Get a file&#39;s images",id:"get-a-files-images",children:[]},{value:"Get a file&#39;s units",id:"get-a-files-units",children:[]},{value:"Upload a file",id:"upload-a-file",children:[]},{value:"Get Batch upload",id:"get-batch-upload",children:[]},{value:"Get all Batches",id:"get-all-batches",children:[]},{value:"Merge files",id:"merge-files",children:[]}]},{value:"Alerts",id:"alerts",children:[{value:"List of Operations Events",id:"list-of-operations-events",children:[]}]}],p={rightToc:o};function d(e){var t=e.components,a=Object(r.a)(e,["components"]);return Object(b.b)("wrapper",Object(n.a)({},p,a,{components:t,mdxType:"MDXLayout"}),Object(b.b)("h2",{id:"about"},"About"),Object(b.b)("p",null,"All HTTP methods should be prepended by this service's endpoint:"),Object(b.b)("pre",null,Object(b.b)("code",Object(n.a)({parentName:"pre"},{}),"https://api.withleaf.io/services/operations/api\n")),Object(b.b)("p",null,"This service has the following endpoints available:"),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Description"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Endpoints"))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(b.b)("a",Object(n.a)({parentName:"td"},{href:"#get-all-files"}),"Get all files")),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(b.b)("span",{class:"badge badge--success"},"GET")," ",Object(b.b)("inlineCode",{parentName:"td"},"/files"))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(b.b)("a",Object(n.a)({parentName:"td"},{href:"#get-a-file"}),"Get a file")),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(b.b)("span",{class:"badge badge--success"},"GET")," ",Object(b.b)("inlineCode",{parentName:"td"},"/files/{id}"))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(b.b)("a",Object(n.a)({parentName:"td"},{href:"#get-a-file-summary"}),"Get a file summary")),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(b.b)("span",{class:"badge badge--success"},"GET")," ",Object(b.b)("inlineCode",{parentName:"td"},"/files/{id}/summary"))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(b.b)("a",Object(n.a)({parentName:"td"},{href:"#get-a-files-images"}),"Get a file's images")),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(b.b)("span",{class:"badge badge--success"},"GET")," ",Object(b.b)("inlineCode",{parentName:"td"},"/files/{id}/images"))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(b.b)("a",Object(n.a)({parentName:"td"},{href:"#get-a-files-units"}),"Get a file's units")),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(b.b)("span",{class:"badge badge--success"},"GET")," ",Object(b.b)("inlineCode",{parentName:"td"},"/files/{id}/units"))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(b.b)("a",Object(n.a)({parentName:"td"},{href:"#upload-a-file"}),"Upload a file")),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(b.b)("span",{class:"badge badge--warning"},"POST")," ",Object(b.b)("inlineCode",{parentName:"td"},"/batch"))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(b.b)("a",Object(n.a)({parentName:"td"},{href:"#get-batch-upload"}),"Get a batch")),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(b.b)("span",{class:"badge badge--success"},"GET")," ",Object(b.b)("inlineCode",{parentName:"td"},"/batch/{id}"))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(b.b)("a",Object(n.a)({parentName:"td"},{href:"#get-all-batches"}),"Get all batches")),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(b.b)("span",{class:"badge badge--success"},"GET")," ",Object(b.b)("inlineCode",{parentName:"td"},"/batch"))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(b.b)("a",Object(n.a)({parentName:"td"},{href:"#merge-files"}),"Merge files")),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(b.b)("span",{class:"badge badge--warning"},"POST")," ",Object(b.b)("inlineCode",{parentName:"td"},"/files/merge"))))),Object(b.b)("p",null,"For easily testing these endpoints, we recommend using our Postman ",Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"https://github.com/Leaf-Agriculture/Leaf-quickstart-Postman-collection"}),"collection"),"."),Object(b.b)("div",{className:"admonition admonition-info alert alert--info"},Object(b.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-heading"}),Object(b.b)("h5",{parentName:"div"},Object(b.b)("span",Object(n.a)({parentName:"h5"},{className:"admonition-icon"}),Object(b.b)("svg",Object(n.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(b.b)("path",Object(n.a)({parentName:"svg"},{fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"})))),"requires Leaf User with credentials")),Object(b.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-content"}),Object(b.b)("p",{parentName:"div"},"To have access to operation files, you will need a Leaf User with valid credentials\nfrom the provider you want to access data. If you don't have a Leaf User or you\nhave not connected it with any provider yet, see ",Object(b.b)("strong",{parentName:"p"},Object(b.b)("a",Object(n.a)({parentName:"strong"},{href:""}),"how to create a Leaf User")),"\nor ",Object(b.b)("strong",{parentName:"p"},Object(b.b)("a",Object(n.a)({parentName:"strong"},{href:""}),"how to add credentials to a Leaf User")),"."))),Object(b.b)("hr",null),Object(b.b)("h3",{id:"get-all-files"},"Get all files"),Object(b.b)("p",null,"\xa0",Object(b.b)("span",{class:"badge badge--success"},"GET"),"  ",Object(b.b)("inlineCode",{parentName:"p"},"/files")),Object(b.b)("p",null,"Gets a paged list of files that belong to the current logged in user. It is\npossible to filter the results by passing some query parameters. They are listed\nbelow."),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Parameter (to filter by)"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Values"))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"leafUserId")),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"uuid of one of your users")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"provider")),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"CNHI"),", ",Object(b.b)("inlineCode",{parentName:"td"},"JohnDeere"),", ",Object(b.b)("inlineCode",{parentName:"td"},"Trimble"),", ",Object(b.b)("inlineCode",{parentName:"td"},"ClimateFieldView"),", ",Object(b.b)("inlineCode",{parentName:"td"},"AgLeader")," or ",Object(b.b)("inlineCode",{parentName:"td"},"Leaf"))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"status")),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"processed"),", ",Object(b.b)("inlineCode",{parentName:"td"},"failed")," or ",Object(b.b)("inlineCode",{parentName:"td"},"processing"))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"origin")),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"provider"),", ",Object(b.b)("inlineCode",{parentName:"td"},"automerged"),", ",Object(b.b)("inlineCode",{parentName:"td"},"merged")," or ",Object(b.b)("inlineCode",{parentName:"td"},"uploaded"))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"organizationId")),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"the provider organizationId (only available for John Deere)")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"batchId")),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"uuid of the upload response (only available for uploaded files)")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"createdTime")),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"ISO 8601 date. Returns operations from the createdTime onward")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"startTime")),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"ISO 8601 date. Returns operations from the startTime onward")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"endTime")),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"ISO 8601 date. Returns operations until the endTime")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"operationType")),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"applied"),", ",Object(b.b)("inlineCode",{parentName:"td"},"planted")," or ",Object(b.b)("inlineCode",{parentName:"td"},"harvested"))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"minArea")),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"a number (Double) representing the minimum area (square meters) of the operations to be returned")))),Object(b.b)("p",null,"Also, for ",Object(b.b)("inlineCode",{parentName:"p"},"operationType"),": ",Object(b.b)("inlineCode",{parentName:"p"},"harvested")," we can process the yield properties related to the operation using the\ncrop density using this ",Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/docs/files_density_table"}),"table"),".   "),Object(b.b)("p",null,"You can also pass some parameters used exclusively for paging through results.\nThey are:"),Object(b.b)("ul",null,Object(b.b)("li",{parentName:"ul"},Object(b.b)("inlineCode",{parentName:"li"},"page"),", an integer specifying the page being fetched (default is 0)"),Object(b.b)("li",{parentName:"ul"},Object(b.b)("inlineCode",{parentName:"li"},"size"),", an integer specifying the size of the page (max is 100)")),Object(b.b)("div",{className:"admonition admonition-info alert alert--info"},Object(b.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-heading"}),Object(b.b)("h5",{parentName:"div"},Object(b.b)("span",Object(n.a)({parentName:"h5"},{className:"admonition-icon"}),Object(b.b)("svg",Object(n.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(b.b)("path",Object(n.a)({parentName:"svg"},{fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"})))),"the default value for page size is 20")),Object(b.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-content"}),Object(b.b)("p",{parentName:"div"},"If the parameters page and size are not set, the endpoint will return 20 results."))),Object(b.b)(l.a,{defaultValue:"sh",values:[{label:"cURL",value:"sh"},{label:"Python",value:"py"},{label:"JavaScript",value:"js"}],mdxType:"Tabs"},Object(b.b)(i.a,{value:"js",mdxType:"TabItem"},Object(b.b)("pre",null,Object(b.b)("code",Object(n.a)({parentName:"pre"},{className:"language-js"}),"const axios = require('axios')\nconst TOKEN = 'YOUR_TOKEN'\n\nconst endpoint ='https://api.withleaf.io/services/operations/api/files'\nconst headers = { 'Authorization': `Bearer ${TOKEN}` }\n\naxios.get(endpoint, { headers })\n    .then(res => console.log(res.data))\n    .catch(console.error)\n"))),Object(b.b)(i.a,{value:"py",mdxType:"TabItem"},Object(b.b)("pre",null,Object(b.b)("code",Object(n.a)({parentName:"pre"},{className:"language-python"}),"import requests\n\nTOKEN = 'YOUR_TOKEN'\n\nendpoint = 'https://api.withleaf.io/services/operations/api/files'\nheaders = {'Authorization': f'Bearer {TOKEN}'}\n\nresponse = requests.get(endpoint, headers=headers)\nprint(response.json())\n"))),Object(b.b)(i.a,{value:"sh",mdxType:"TabItem"},Object(b.b)("pre",null,Object(b.b)("code",Object(n.a)({parentName:"pre"},{className:"language-shell"}),"curl -X GET \\\n    -H 'Authorization: Bearer YOUR_TOKEN' \\\n    'https://api.withleaf.io/services/operations/api/files'\n")))),Object(b.b)("h4",{id:"response"},"Response"),Object(b.b)("p",null,'The response is a JSON with the key "operations" referring to a list of files.\n',Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"files_sample_output"}),"Here's a link with sample responses"),' for "planted", "applied"\nand "harvested" operation files.'),Object(b.b)("pre",null,Object(b.b)("code",Object(n.a)({parentName:"pre"},{className:"language-json"}),'{\n    "message": "SUCCESS",\n    "operations": [OPERATION]\n}    \n')),Object(b.b)("hr",null),Object(b.b)("h3",{id:"get-a-file"},"Get a file"),Object(b.b)("p",null,"\xa0",Object(b.b)("span",{class:"badge badge--success"},"GET"),"  ",Object(b.b)("inlineCode",{parentName:"p"},"/files/{id}")),Object(b.b)("p",null,"Gets a single file by its id."),Object(b.b)(l.a,{defaultValue:"sh",values:[{label:"cURL",value:"sh"},{label:"Python",value:"py"},{label:"JavaScript",value:"js"}],mdxType:"Tabs"},Object(b.b)(i.a,{value:"js",mdxType:"TabItem"},Object(b.b)("pre",null,Object(b.b)("code",Object(n.a)({parentName:"pre"},{className:"language-js"}),"const axios = require('axios')\nconst TOKEN = 'YOUR_TOKEN'\n\nconst endpoint ='https://api.withleaf.io/services/operations/api/files/{id}'\nconst headers = { 'Authorization': `Bearer ${TOKEN}` }\n\naxios.get(endpoint, { headers })\n    .then(res => console.log(res.data))\n    .catch(console.error)\n"))),Object(b.b)(i.a,{value:"py",mdxType:"TabItem"},Object(b.b)("pre",null,Object(b.b)("code",Object(n.a)({parentName:"pre"},{className:"language-py"}),"import requests\n\nTOKEN = 'YOUR_TOKEN'\n\nendpoint = 'https://api.withleaf.io/services/operations/api/files/{id}'\nheaders = {'Authorization': f'Bearer {TOKEN}'}\n\nresponse = requests.get(endpoint, headers=headers)\nprint(response.json())\n"))),Object(b.b)(i.a,{value:"sh",mdxType:"TabItem"},Object(b.b)("pre",null,Object(b.b)("code",Object(n.a)({parentName:"pre"},{className:"language-shell"}),"curl -X GET \\\n    -H 'Authorization: Bearer YOUR_TOKEN' \\\n    'https://api.withleaf.io/services/operations/api/files/{id}'\n")))),Object(b.b)("h4",{id:"response-1"},"Response"),Object(b.b)("p",null,Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"files_sample_output"}),"Here's a link with sample responses"),' for "planted", "applied"\nand "harvested" operation files.'),Object(b.b)("hr",null),Object(b.b)("h3",{id:"get-a-file-summary"},"Get a file summary"),Object(b.b)("p",null,"\xa0",Object(b.b)("span",{class:"badge badge--success"},"GET"),"  ",Object(b.b)("inlineCode",{parentName:"p"},"/files/{id}/summary")),Object(b.b)("p",null,"Gets the summary, if available, for the file id."),Object(b.b)(l.a,{defaultValue:"sh",values:[{label:"cURL",value:"sh"},{label:"Python",value:"py"},{label:"JavaScript",value:"js"}],mdxType:"Tabs"},Object(b.b)(i.a,{value:"js",mdxType:"TabItem"},Object(b.b)("pre",null,Object(b.b)("code",Object(n.a)({parentName:"pre"},{className:"language-js"}),"const axios = require('axios')\nconst TOKEN = 'YOUR_TOKEN'\n\nconst endpoint ='https://api.withleaf.io/services/operations/api/files/{id}/summary'\nconst headers = { 'Authorization': `Bearer ${TOKEN}` }\n\naxios.get(endpoint, { headers })\n    .then(res => console.log(res.data))\n    .catch(console.error)\n"))),Object(b.b)(i.a,{value:"py",mdxType:"TabItem"},Object(b.b)("pre",null,Object(b.b)("code",Object(n.a)({parentName:"pre"},{className:"language-py"}),"import requests\n\nTOKEN = 'YOUR_TOKEN'\n\nendpoint = 'https://api.withleaf.io/services/operations/api/files/{id}/summary'\nheaders = {'Authorization': f'Bearer {TOKEN}'}\n\nresponse = requests.get(endpoint, headers=headers)\nprint(response.json())\n"))),Object(b.b)(i.a,{value:"sh",mdxType:"TabItem"},Object(b.b)("pre",null,Object(b.b)("code",Object(n.a)({parentName:"pre"},{className:"language-shell"}),"curl -X GET \\\n    -H 'Authorization: Bearer YOUR_TOKEN' \\\n    'https://api.withleaf.io/services/operations/api/files/{id}/summary'\n")))),Object(b.b)("h4",{id:"response-2"},"Response"),Object(b.b)("p",null,Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"files_sample_output"}),"Here's a link with sample responses"),' for "planted", "applied"\nand "harvested" operation files.'),Object(b.b)("hr",null),Object(b.b)("h3",{id:"get-a-files-images"},"Get a file's images"),Object(b.b)("p",null,"\xa0",Object(b.b)("span",{class:"badge badge--success"},"GET"),"  ",Object(b.b)("inlineCode",{parentName:"p"},"/files/{id}/images")),Object(b.b)("p",null,"Gets a list of PNG images generated from the operation's file properties."),Object(b.b)(l.a,{defaultValue:"sh",values:[{label:"cURL",value:"sh"},{label:"Python",value:"py"},{label:"JavaScript",value:"js"},{label:"JSON Response",value:"json"}],mdxType:"Tabs"},Object(b.b)(i.a,{value:"js",mdxType:"TabItem"},Object(b.b)("pre",null,Object(b.b)("code",Object(n.a)({parentName:"pre"},{className:"language-js"}),"const axios = require('axios')\nconst TOKEN = 'YOUR_TOKEN'\n\nconst endpoint ='https://api.withleaf.io/services/operations/api/files/{id}/images'\nconst headers = { 'Authorization': `Bearer ${TOKEN}` }\n\naxios.get(endpoint, { headers })\n    .then(res => console.log(res.data))\n    .catch(console.error)\n"))),Object(b.b)(i.a,{value:"py",mdxType:"TabItem"},Object(b.b)("pre",null,Object(b.b)("code",Object(n.a)({parentName:"pre"},{className:"language-py"}),"import requests\n\nTOKEN = 'YOUR_TOKEN'\n\nendpoint = 'https://api.withleaf.io/services/operations/api/files/{id}/images'\nheaders = {'Authorization': f'Bearer {TOKEN}'}\n\nresponse = requests.get(endpoint, headers=headers)\nprint(response.json())\n"))),Object(b.b)(i.a,{value:"sh",mdxType:"TabItem"},Object(b.b)("pre",null,Object(b.b)("code",Object(n.a)({parentName:"pre"},{className:"language-shell"}),"curl -X GET \\\n    -H 'Authorization: Bearer YOUR_TOKEN' \\\n    'https://api.withleaf.io/services/operations/api/files/{id}/images'\n"))),Object(b.b)(i.a,{value:"json",mdxType:"TabItem"},Object(b.b)("p",null,"  Returns a JSON list of the following format:"),Object(b.b)("pre",null,Object(b.b)("code",Object(n.a)({parentName:"pre"},{className:"language-json"}),'[\n  {\n    "property": "elevation",\n    "ramp": {\n      "0%":   [200,   0, 0],\n      "35%":  [255,  40, 0],\n      "45%":  [255, 150, 0],\n      "55%":  [255, 240, 0],\n      "65%":  [  0, 230, 0],\n      "75%":  [  0, 190, 0],\n      "100%": [  0, 130, 0],\n      "nv":   [  0,   0, 0, 0]\n    },\n    "url": "string"\n  },\n  ...\n]\n')),Object(b.b)("p",null,"  The ",Object(b.b)("inlineCode",{parentName:"p"},"property")," refers to the property extracted from files' data to generate the\nimage. In the example above, the image would represent the elevation."),Object(b.b)("p",null,"  The ",Object(b.b)("inlineCode",{parentName:"p"},"ramp")," is the color ramp used to generate the image. The percentages\ncorrespond to the minimum (0%) and maximum (100%) values in the image. The\nlisted values correspond to RGB values used. The ",Object(b.b)("inlineCode",{parentName:"p"},"nv")," refers to ",Object(b.b)("inlineCode",{parentName:"p"},"no value"),". It\nis used internally to make the image transparent on places without data.\nCurrently, this ramp is the same in all images processed."),Object(b.b)("p",null,"  We also generate an auxiliary ",Object(b.b)("inlineCode",{parentName:"p"},"xml")," with geographic information to handle this\nimage on GIS environments. You just need to append the ",Object(b.b)("inlineCode",{parentName:"p"},'".aux.xml"')," string to the png url."))),Object(b.b)("hr",null),Object(b.b)("h3",{id:"get-a-files-units"},"Get a file's units"),Object(b.b)("p",null,"\xa0",Object(b.b)("span",{class:"badge badge--success"},"GET"),"  ",Object(b.b)("inlineCode",{parentName:"p"},"/files/{id}/units")),Object(b.b)("p",null,"Gets the file's properties and their units."),Object(b.b)(l.a,{defaultValue:"sh",values:[{label:"cURL",value:"sh"},{label:"Python",value:"py"},{label:"JavaScript",value:"js"},{label:"JSON Response",value:"json"}],mdxType:"Tabs"},Object(b.b)(i.a,{value:"js",mdxType:"TabItem"},Object(b.b)("pre",null,Object(b.b)("code",Object(n.a)({parentName:"pre"},{className:"language-js"}),"const axios = require('axios')\nconst TOKEN = 'YOUR_TOKEN'\n\nconst endpoint ='https://api.withleaf.io/services/operations/api/files/{id}/units'\nconst headers = { 'Authorization': `Bearer ${TOKEN}` }\n\naxios.get(endpoint, { headers })\n    .then(res => console.log(res.data))\n    .catch(console.error)\n"))),Object(b.b)(i.a,{value:"py",mdxType:"TabItem"},Object(b.b)("pre",null,Object(b.b)("code",Object(n.a)({parentName:"pre"},{className:"language-py"}),"import requests\n\nTOKEN = 'YOUR_TOKEN'\n\nendpoint = 'https://api.withleaf.io/services/operations/api/files/{id}/units'\nheaders = {'Authorization': f'Bearer {TOKEN}'}\n\nresponse = requests.get(endpoint, headers=headers)\nprint(response.json())\n"))),Object(b.b)(i.a,{value:"sh",mdxType:"TabItem"},Object(b.b)("pre",null,Object(b.b)("code",Object(n.a)({parentName:"pre"},{className:"language-shell"}),"curl -X GET \\\n    -H 'Authorization: Bearer YOUR_TOKEN' \\\n    'https://api.withleaf.io/services/operations/api/files/{id}/units'\n"))),Object(b.b)(i.a,{value:"json",mdxType:"TabItem"},Object(b.b)("p",null,"  Returns a JSON like the following:"),Object(b.b)("pre",null,Object(b.b)("code",Object(n.a)({parentName:"pre"},{className:"language-json"}),'{\n    "distance": "ft",\n    "heading": "arcdeg",\n    "speed": "mi/hr",\n    "elevation": "ft",\n    "harvestMoisture": "prcnt",\n    "wetMass": "lb",\n    "yieldVolume": "bu",\n    "equipmentWidth": "ft"\n}\n')),Object(b.b)("p",null,"These properties vary depending on the operationType, but you can expect the same,\nstandardized keys, across different providers."),Object(b.b)("p",null,"Units usually don't change for the same Leaf User, since the providers units\nconfiguration is based on their location. But keep in mind that it's best to\nalways take the units into consideration, just to be sure."))),Object(b.b)("hr",null),Object(b.b)("h3",{id:"upload-a-file"},"Upload a file"),Object(b.b)("p",null,"\xa0",Object(b.b)("span",{class:"badge badge--warning"},"POST")," ",Object(b.b)("inlineCode",{parentName:"p"},"/batch")),Object(b.b)("p",null,"Posts/creates a new file in Leaf. The file must be sent as a zip."),Object(b.b)("p",null,"This endpoint accepts a .zip of operation files, detects which files are in the\n.zip, and returns the ID of the process, which can in turn be used to retrieve\nthe ID's of the files being processed."),Object(b.b)("div",{className:"admonition admonition-info alert alert--info"},Object(b.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-heading"}),Object(b.b)("h5",{parentName:"div"},Object(b.b)("span",Object(n.a)({parentName:"h5"},{className:"admonition-icon"}),Object(b.b)("svg",Object(n.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(b.b)("path",Object(n.a)({parentName:"svg"},{fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"})))),"File size limit of 3 GB")),Object(b.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-content"}),Object(b.b)("p",{parentName:"div"},"Currently, our upload endpoints accepts files with the maximum size limited to 3 gigabytes."))),Object(b.b)("p",null,"This endpoint receives two required URL parameters, a ",Object(b.b)("inlineCode",{parentName:"p"},"leafUserId")," and ",Object(b.b)("inlineCode",{parentName:"p"},"provider")," "),Object(b.b)("p",null,"A ",Object(b.b)("inlineCode",{parentName:"p"},"provider")," can be set as one of the following:"),Object(b.b)("pre",null,Object(b.b)("code",Object(n.a)({parentName:"pre"},{}),"Other\nClimateFieldView\nCNHI\nJohnDeere\nTrimble\nAgLeader\nFarmobile\nPrecisionPlanting\n")),Object(b.b)("p",null,'If provider is set to "Other", Leaf will detect which files are\npresent in the .zip file and process them accordingly.'),Object(b.b)("p",null,"Leaf will detect files present in the uploaded .zip and\ncreate/return one file id for each file that is detected. These individual files\ncan then be accessed individually by their ID, or via their associated field\nboundary."),Object(b.b)("p",null,"The following file formats from each provider are supported:"),Object(b.b)("h4",{id:"johndeere"},"JohnDeere"),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"File Format"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Monitor Model"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Details"))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"GS2"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"GreenStar 2 \u2013 1800/2600"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"/RCD/global.ver"))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"GS3"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"GreenStar 3 \u2013 2630"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"/GS3_2630/profile/RCD/EIC/global.ver"))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Gen4"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Gen 4 - 4600/4630"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"/JD-Data/log/user defined name/*.jdl"))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Shapefile"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Exported from MyJohnDeere"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Shapefile with extra metadata in a ",Object(b.b)("inlineCode",{parentName:"td"},".json")," file")))),Object(b.b)("h4",{id:"climate-fieldview"},"Climate FieldView"),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"File Format"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Monitor Model"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Details"))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"dat"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"All files from Climate FieldView"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"A zip with ",Object(b.b)("inlineCode",{parentName:"td"},".dat")," files")))),Object(b.b)("h4",{id:"cnhi"},"CNHI"),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"File Format"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Monitor Model"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Details"))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"CN1"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"CaseIH monitors or exported from CNH Connects"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"/file.cn1/index.vy1"))))),Object(b.b)("h4",{id:"agleader"},"AgLeader"),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"File Format"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Monitor Model"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Details"))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"yld"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"YM2000, PFAdvantage & other OEM systems"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"A zip with ",Object(b.b)("inlineCode",{parentName:"td"},".yld")," files")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"ilf"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"INTEGRA / Insight / Edge"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"A zip with ",Object(b.b)("inlineCode",{parentName:"td"},".ilf")," files")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"agdata"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"INTEGRA / VERSA / COMPASS"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"A zip with ",Object(b.b)("inlineCode",{parentName:"td"},".agdata")," files")))),Object(b.b)("h4",{id:"trimble"},"Trimble"),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"File Format"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Monitor Model"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Details"))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"AgData"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"FMX and CFX monitors"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"/AgData/"))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"AgGPS"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"TMX and GFX monitors"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"/AgGPS/"))))),Object(b.b)("h4",{id:"precision-planting-beta"},"Precision Planting (beta)"),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"File Format"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Monitor Model"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Details"))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"PP2020"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"20","|","20"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"A zip with ",Object(b.b)("inlineCode",{parentName:"td"},".2020")," files.")))),Object(b.b)("h4",{id:"farmobile"},"Farmobile"),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"File Format"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Details"))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"GeoJSON"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"GeoJSON files exported from Farmobile. Since GeoJSON files do not contain information on the units used, we assume the default units from Farmobile are being used.")))),Object(b.b)("h4",{id:"other"},"Other"),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"File Format"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Details"))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Shapefile"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Shapefiles exported from SMS. Since Shapefiles do not contain information on the units used, we assume the default units from SMS are being used.")))),Object(b.b)(l.a,{defaultValue:"sh",values:[{label:"cURL",value:"sh"},{label:"Python",value:"py"},{label:"JavaScript",value:"js"}],mdxType:"Tabs"},Object(b.b)(i.a,{value:"js",mdxType:"TabItem"},Object(b.b)("pre",null,Object(b.b)("code",Object(n.a)({parentName:"pre"},{className:"language-js"}),"const axios = require('axios')\nconst TOKEN = 'YOUR_TOKEN'\n\nconst endpoint ='https://api.withleaf.io/services/operations/api/batch'\n\nconst headers = {\n  'Authorization': `Bearer ${TOKEN}`\n  'Content-Type': 'multipart/form-data'\n}\n\nconst params = {\n  provider: 'JohnDeere',\n  leafUserId: 'id'\n}\n\nconst form = new FormData()\nform.append('file', 'shapefile.zip')\n\naxios.post(endpoint, form, { headers, params })\n    .then(res => console.log(res.data))\n    .catch(console.error)\n"))),Object(b.b)(i.a,{value:"py",mdxType:"TabItem"},Object(b.b)("pre",null,Object(b.b)("code",Object(n.a)({parentName:"pre"},{className:"language-py"}),"import requests\n\nTOKEN = 'YOUR_TOKEN'\n\nendpoint = 'https://api.withleaf.io/services/operations/api/batch'\nheaders = {'Authorization': f'Bearer {TOKEN}'}\n\nfiles = {'file': open('shapefile.zip', 'rb')}\nparams = {\n  'provider': 'JohnDeere',\n  'leafUserId': 'id'\n}\n\nresponse = requests.post(endpoint, headers=headers, files=files, params=params)\nprint(response.json())\n"))),Object(b.b)(i.a,{value:"sh",mdxType:"TabItem"},Object(b.b)("pre",null,Object(b.b)("code",Object(n.a)({parentName:"pre"},{className:"language-shell"}),"curl -X POST \\\n    -H 'Authorization: Bearer YOUR_TOKEN' \\\n    -F 'file=shapefile.zip' \\\n    'https://api.withleaf.io/services/operations/api/batch?' \\\n    'provider=JohnDeere&leafUserId=id'\n")))),Object(b.b)("h5",{id:"response-3"},"Response"),Object(b.b)("p",null,"Returns a single JSON object, as shown below:"),Object(b.b)("pre",null,Object(b.b)("code",Object(n.a)({parentName:"pre"},{className:"language-json"}),'{\n    "id": "996aea67-52bc-4d4b-9b77-028756dc0ee9",\n    "leafUserId": "ede8f781-1d55-4b2d-83a1-6785ddab6e1d",\n    "fileName": "Climate.zip",\n    "size": 8652951,\n    "provider": "Other",\n    "status": "RECEIVED",\n    "uploadTimestamp": "2021-03-12T19:50:55.567755Z"\n}\n')),Object(b.b)("p",null,"This id can then be queried to retrieve on ",Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"#get-batch-upload"}),"Get batch")," to get the individual file ID's.\nThen you can query each of the files individually with\n",Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"#get-a-file"}),"Get a File")," or all of them, filtering by ",Object(b.b)("inlineCode",{parentName:"p"},"batchId"),", on\n",Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"#get-all-files"}),"Get all Files"),"."),Object(b.b)("h4",{id:"batch-status"},"Batch status"),Object(b.b)("p",null,"The ",Object(b.b)("em",{parentName:"p"},"status")," key will evolve accordingly to the following states:"),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Status"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Description"))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"RECEIVED"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Is the default state for every batch created")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"PROCESSED"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"When all the files included in the batch were processed, and at least one file have status SUCCESS")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"FAILED"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"The batch did not generated any leaf files with status SUCCESS")))),Object(b.b)("p",null,"The messages with FAILED status have the key ",Object(b.b)("em",{parentName:"p"},"statusDetails"),". The statusDetails are just informative and should not be used programatically."),Object(b.b)("pre",null,Object(b.b)("code",Object(n.a)({parentName:"pre"},{className:"language-json"}),'{\n    "id": "996aea67-52bc-4d4b-9b77-028756dc0ee9",\n    "leafUserId": "ede8f781-1d55-4b2d-83a1-6785ddab6e1d",\n    "fileName": "Climate.zip",\n    "size": 8652951,\n    "provider": "Other",\n    "status": "FAILED",\n    "statusDetails": "No operation found. Check file format before re-trying or contact support. Check file format before re-trying or contact support", \n    "uploadTimestamp": "2021-03-12T19:50:55.567755Z"\n}\n')),Object(b.b)("p",null,"The following status can be present on ",Object(b.b)("em",{parentName:"p"},"statusDetails"),":"),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Status"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Description"))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Failed to open Zip file"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"It means that the file uploaded is not a valid zip")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"No operation found"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"We could not identify any ",Object(b.b)("strong",{parentName:"td"},"valid")," machinery file inside the zip uploaded")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"No operation discovered"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"When we can't find any machinery file inside the batch")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Error extracting files from batch"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"When an error internal to our API happened")))),Object(b.b)("hr",null),Object(b.b)("h3",{id:"get-batch-upload"},"Get Batch upload"),Object(b.b)("p",null,"Once you've uploaded files, you can then query these files individually, merge the files, or query for them\nvia ",Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"#get-all-files"}),"Get all Files"),".\nYou can also query the batch upload ID to see a list of files generated in the upload and a status of the upload with this endpoint."),Object(b.b)(l.a,{defaultValue:"py",values:[{label:"Python",value:"py"}],mdxType:"Tabs"},Object(b.b)(i.a,{value:"py",mdxType:"TabItem"},Object(b.b)("pre",null,Object(b.b)("code",Object(n.a)({parentName:"pre"},{className:"language-python"}),"import requests\n\nurl = \"https://api.withleaf.io/services/operations/api/batch/{batch_id}/\"\n\nheaders = {'Authorization': 'Bearer YOUR_LEAF_TOKEN'}\n\nresponse = requests.request(\"GET\", url, headers=headers)\n\nprint(response.text)\n")))),Object(b.b)("h5",{id:"response-4"},"Response:"),Object(b.b)("p",null,"When you query a batch upload ID, you will receive a single JSON object:"),Object(b.b)("pre",null,Object(b.b)("code",Object(n.a)({parentName:"pre"},{className:"language-json"}),'{\n    "id": "f893c921-0f38-4f39-9f3e-be765ac61df0",\n    "leafUserId": "bdf5f624-fb9b-4294-949c-29e979f0ce5a",\n    "provider": "Other",\n    "status": "PROCESSED",\n    "leafFiles": [\n        "8334f4bb-48de-44e2-903b-6dedd6db6683",\n        "81778f58-8eed-41cc-a025-e653ea85b01e",\n        "0f606bef-b529-4899-854c-9b698cd08762",\n        "84fec273-b458-4be7-8feb-44204502f126",\n        "92b7367b-2ffd-4a82-ba9b-5a40e8b68714",\n        "90e7e130-8f33-4752-b8f4-3a132246f047",\n        "cb97857e-61b0-4fbe-a5c1-1083cfa6738f",\n        "0cded205-7734-40fb-8906-b82d36e35845",\n        "dc24d491-983c-4ebe-b961-8c749943529f",\n        "67af8697-47bc-4886-935f-5880d1eba31d",\n        "8b7d8b7b-e682-4c3e-aee2-3b7713cc81a4",\n        "e5067ed3-8463-43b9-a8a5-3b3c1eee44bc",\n        "b9d30d3a-0207-410f-81da-afb31a1b36cb",\n        "eace9b90-a520-4c4c-af89-4c3fd5da68fa",\n        "6ea55c68-203f-448b-9e7f-dcd014c31cc3"\n    ]\n}\n')),Object(b.b)("hr",null),Object(b.b)("h3",{id:"get-all-batches"},"Get all Batches"),Object(b.b)("p",null,"Once you've uploaded files, you can then query these files individually, merge the files, or query for them\nvia ",Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"#get-all-files"}),"Get all Files"),".\nYou can also query the batch upload ID to see a list of files generated in the upload and a status of the upload with this endpoint."),Object(b.b)(l.a,{defaultValue:"py",values:[{label:"Python",value:"py"}],mdxType:"Tabs"},Object(b.b)(i.a,{value:"py",mdxType:"TabItem"},Object(b.b)("pre",null,Object(b.b)("code",Object(n.a)({parentName:"pre"},{className:"language-python"}),"import requests\n\nurl = \"https://api.withleaf.io/services/operations/api/batch\"\n\nheaders = {'Authorization': 'Bearer YOUR_LEAF_TOKEN'}\n\nresponse = requests.request(\"GET\", url, headers=headers)\n\nprint(response.text)\n")))),Object(b.b)("h5",{id:"response-5"},"Response:"),Object(b.b)("p",null,"When you query a batch upload ID, you will receive a JSON with list of batches:"),Object(b.b)("pre",null,Object(b.b)("code",Object(n.a)({parentName:"pre"},{className:"language-json"}),'[\n  {\n      "id": "f893c921-0f38-4f39-9f3e-be765ac61df0",\n      "leafUserId": "bdf5f624-fb9b-4294-949c-29e979f0ce5a",\n      "provider": "Other",\n      "status": "PROCESSED",\n      "leafFiles": [\n          "8334f4bb-48de-44e2-903b-6dedd6db6683",\n          "81778f58-8eed-41cc-a025-e653ea85b01e",\n          "0f606bef-b529-4899-854c-9b698cd08762",\n          "84fec273-b458-4be7-8feb-44204502f126",\n          "92b7367b-2ffd-4a82-ba9b-5a40e8b68714",\n          "90e7e130-8f33-4752-b8f4-3a132246f047",\n          "cb97857e-61b0-4fbe-a5c1-1083cfa6738f",\n          "0cded205-7734-40fb-8906-b82d36e35845",\n          "dc24d491-983c-4ebe-b961-8c749943529f",\n          "67af8697-47bc-4886-935f-5880d1eba31d",\n          "8b7d8b7b-e682-4c3e-aee2-3b7713cc81a4",\n          "e5067ed3-8463-43b9-a8a5-3b3c1eee44bc",\n          "b9d30d3a-0207-410f-81da-afb31a1b36cb",\n          "eace9b90-a520-4c4c-af89-4c3fd5da68fa",\n          "6ea55c68-203f-448b-9e7f-dcd014c31cc3"\n      ]\n  }\n]\n')),Object(b.b)("hr",null),Object(b.b)("h3",{id:"merge-files"},"Merge files"),Object(b.b)("p",null,"\xa0",Object(b.b)("span",{class:"badge badge--warning"},"POST")," ",Object(b.b)("inlineCode",{parentName:"p"},"/files/merge")),Object(b.b)("p",null,"Posts a merge operation to our server."),Object(b.b)("p",null,"A merge operation is performed asynchronously. This call will return immediately\nwith the newly created file entry, but at this point, the file is not already\nprocessed and available. You will need to make a new ",Object(b.b)("inlineCode",{parentName:"p"},"GET /files")," request for the\nnew id and check the status. A status value of ",Object(b.b)("inlineCode",{parentName:"p"},"processed")," means the file is\ndone merging."),Object(b.b)("p",null,"A merge process has some validations, the files passed must belong to\nthe same ",Object(b.b)("inlineCode",{parentName:"p"},"leafUserId"),", be of the same operation type and have the status as ",Object(b.b)("inlineCode",{parentName:"p"},"processed"),".\nIf any of those filters fail, the endpoint will result in HTTP 400 error."),Object(b.b)("p",null,"It receives a single JSON object with the ",Object(b.b)("inlineCode",{parentName:"p"},"ids")," entry. Example:"),Object(b.b)("pre",null,Object(b.b)("code",Object(n.a)({parentName:"pre"},{className:"language-json"}),'{\n  "ids": [ "id1", "id2", "so on" ]\n}\n')),Object(b.b)(l.a,{defaultValue:"sh",values:[{label:"cURL",value:"sh"},{label:"Python",value:"py"},{label:"JavaScript",value:"js"},{label:"JSON Response",value:"json"}],mdxType:"Tabs"},Object(b.b)(i.a,{value:"js",mdxType:"TabItem"},Object(b.b)("pre",null,Object(b.b)("code",Object(n.a)({parentName:"pre"},{className:"language-js"}),"const axios = require('axios')\nconst TOKEN = 'YOUR_TOKEN'\n\nconst endpoint ='https://api.withleaf.io/services/operations/api/files/merge'\nconst headers = { 'Authorization': `Bearer ${TOKEN}` }\n\nconst data = { ids: [ 'id1', 'id2' ] }\n\naxios.post(endpoint, { headers, data })\n    .then(res => console.log(res.data))\n    .catch(console.error)\n"))),Object(b.b)(i.a,{value:"py",mdxType:"TabItem"},Object(b.b)("pre",null,Object(b.b)("code",Object(n.a)({parentName:"pre"},{className:"language-py"}),"import requests\n\nTOKEN = 'YOUR_TOKEN'\n\nendpoint = 'https://api.withleaf.io/services/operations/api/files/merge'\nheaders = {'Authorization': f'Bearer {TOKEN}'}\n\ndata = {'ids': ['id1', 'id2']}\n\nresponse = requests.post(endpoint, headers=headers, json=data)\nprint(response.json())\n"))),Object(b.b)(i.a,{value:"sh",mdxType:"TabItem"},Object(b.b)("pre",null,Object(b.b)("code",Object(n.a)({parentName:"pre"},{className:"language-shell"}),"curl -X POST \\\n    -H 'Authorization: Bearer YOUR_TOKEN' \\\n    -d '{ \"ids\": [ \"id1\", \"id2\" ] }'\n    'https://api.withleaf.io/services/operations/api/files/merge'\n"))),Object(b.b)(i.a,{value:"json",mdxType:"TabItem"},Object(b.b)("p",null,"  Returns a single JSON object:"),Object(b.b)("pre",null,Object(b.b)("code",Object(n.a)({parentName:"pre"},{className:"language-json"}),'{\n  "id": "id",\n  "status": "SENT_TO_MERGE"\n}\n')),Object(b.b)("p",null,"  After a few minutes, you can consult the result of Leaf processing over this file by\nperforming GET consults in this."))),Object(b.b)("h2",{id:"alerts"},"Alerts"),Object(b.b)("p",null,"With Alerts you can be notified when something happens or changes instead of needing to repeatedly query for changes.\nLeaf Alerts support events that happen within Leaf and events that happen within supported 3rd party software. "),Object(b.b)("h3",{id:"list-of-operations-events"},"List of Operations Events"),Object(b.b)("p",null,"Leaf Operations Service can Alert you on these events: ",Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"alerts_events#operation-events"}),"list of Operations Events")),Object(b.b)("hr",null))}d.isMDXComponent=!0}}]);