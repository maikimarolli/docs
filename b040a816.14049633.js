(window.webpackJsonp=window.webpackJsonp||[]).push([[47],{101:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return l})),a.d(t,"metadata",(function(){return s})),a.d(t,"rightToc",(function(){return o})),a.d(t,"default",(function(){return p}));var n=a(2),r=a(6),i=(a(0),a(126)),c=a(132),b=a(133),l=(a(129),{title:"Endpoints"}),s={unversionedId:"beta_machines_endpoints",id:"beta_machines_endpoints",isDocsHomePage:!1,title:"Endpoints",description:"[1]//github.com/Leaf-Agriculture/Leaf-quickstart-Postman-collection",source:"@site/docs/beta_machines_endpoints.md",permalink:"/docs/docs/beta_machines_endpoints",editUrl:"https://github.com/Leaf-Agriculture/docs/tree/master/docs/beta_machines_endpoints.md",sidebar:"docs",previous:{title:"Overview",permalink:"/docs/docs/beta_features_overview"},next:{title:"Endpoints",permalink:"/docs/docs/beta_prescriptions_endpoints"}},o=[{value:"About",id:"about",children:[]},{value:"Machines (BETA)",id:"machines-beta",children:[{value:"Machine Resources",id:"machine-resources",children:[]},{value:"Get all machines",id:"get-all-machines",children:[]},{value:"Create a machine",id:"create-a-machine",children:[]},{value:"Get a machine",id:"get-a-machine",children:[]},{value:"Get machine files",id:"get-machine-files",children:[]},{value:"Delete a machine",id:"delete-a-machine",children:[]},{value:"Update a machine",id:"update-a-machine",children:[]}]}],d={rightToc:o};function p(e){var t=e.components,a=Object(r.a)(e,["components"]);return Object(i.b)("wrapper",Object(n.a)({},d,a,{components:t,mdxType:"MDXLayout"}),Object(i.b)("h2",{id:"about"},"About"),Object(i.b)("p",null,"All HTTP methods should be prepended by this service's endpoint:"),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{}),"https://api.withleaf.io/services/beta/api\n")),Object(i.b)("p",null,"See below the REST resources and their endpoints available in this service."),Object(i.b)("h2",{id:"machines-beta"},"Machines (BETA)"),Object(i.b)("h3",{id:"machine-resources"},"Machine Resources"),Object(i.b)("p",null,"This feature has the following endpoints available:"),Object(i.b)("table",null,Object(i.b)("thead",{parentName:"table"},Object(i.b)("tr",{parentName:"thead"},Object(i.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Description"),Object(i.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Endpoints"))),Object(i.b)("tbody",{parentName:"table"},Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(i.b)("a",Object(n.a)({parentName:"td"},{href:"#get-all-machines"}),"Get all machines")),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(i.b)("span",{class:"badge badge--success"},"GET")," ",Object(i.b)("inlineCode",{parentName:"td"},"/users/{leafUserId}/machines"))),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(i.b)("a",Object(n.a)({parentName:"td"},{href:"#create-a-machine"}),"Create a machine")),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(i.b)("span",{class:"badge badge--success"},"POST")," ",Object(i.b)("inlineCode",{parentName:"td"},"/users/{leafUserId}/machines"))),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(i.b)("a",Object(n.a)({parentName:"td"},{href:"#get-a-machine"}),"Get a machine")),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(i.b)("span",{class:"badge badge--success"},"GET")," ",Object(i.b)("inlineCode",{parentName:"td"},"/users/{leafUserId}/machines/{machineId}"))),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(i.b)("a",Object(n.a)({parentName:"td"},{href:"#get-machine-files"}),"Get machine files")),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(i.b)("span",{class:"badge badge--success"},"PATCH")," ",Object(i.b)("inlineCode",{parentName:"td"},"/users/{leafUserId}/machines/{machineId}/files"))),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(i.b)("a",Object(n.a)({parentName:"td"},{href:"#delete-a-machine"}),"Delete a machine")),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(i.b)("span",{class:"badge badge--success"},"DELETE")," ",Object(i.b)("inlineCode",{parentName:"td"},"/users/{leafUserId}/machines/{machineId}"))),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(i.b)("a",Object(n.a)({parentName:"td"},{href:"#update-a-machine"}),"Update a machine")),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(i.b)("span",{class:"badge badge--success"},"PATCH")," ",Object(i.b)("inlineCode",{parentName:"td"},"/users/{leafUserId}/machines/{machineId}"))))),Object(i.b)("h3",{id:"get-all-machines"},"Get all machines"),Object(i.b)("p",null,"\xa0",Object(i.b)("span",{class:"badge badge--success"},"GET"),"  ",Object(i.b)("inlineCode",{parentName:"p"},"/users/{leafUserId}/machines")),Object(i.b)("p",null,"Get the list of machines that are related to a given LeafUserId. Some fields can be sent as query parameters to filter the machines, such as:"),Object(i.b)("table",null,Object(i.b)("thead",{parentName:"table"},Object(i.b)("tr",{parentName:"thead"},Object(i.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Parameter (to filter by)"),Object(i.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Values"))),Object(i.b)("tbody",{parentName:"table"},Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(i.b)("inlineCode",{parentName:"td"},"name")),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"text")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(i.b)("inlineCode",{parentName:"td"},"provider")),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"text (JohnDeere, CaseIH, Stara, etc)")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(i.b)("inlineCode",{parentName:"td"},"providerOrganizationId")),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"text")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(i.b)("inlineCode",{parentName:"td"},"serialNumber")),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"text")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(i.b)("inlineCode",{parentName:"td"},"originType")),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"specify the origin of the machine, must be either USER_CREATED, FILE_POOLED or PROVIDER_POOLED")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(i.b)("inlineCode",{parentName:"td"},"createdTime")),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"must match exactly the time of the record creation, ISO 8601 without timezone")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(i.b)("inlineCode",{parentName:"td"},"beforeCreatedTime")),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"filters for records created before the datetime, ISO 8601 without timezone")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(i.b)("inlineCode",{parentName:"td"},"afterCreatedTime")),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"filters for records created after the datetime, ISO 8601 without timezone")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(i.b)("inlineCode",{parentName:"td"},"vin")),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"filters machines by Vehicle Identification Number")))),Object(i.b)("p",null,"You can also pass some parameters used exclusively for paging through results.\nThey are:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"page"),", an integer specifying the page being fetched (default is 0)"),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"size"),", an integer specifying the size of the page (max is 100)"),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"sort"),", the sorting order of the results; can be multivalue, the former takes precedence over the later; can also specify order as ",Object(i.b)("inlineCode",{parentName:"li"},"asc")," or ",Object(i.b)("inlineCode",{parentName:"li"},"desc")," with ",Object(i.b)("inlineCode",{parentName:"li"},"asc")," being the default. Example: id,desc",Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},"Valid values for sorting are: id, leafUserId, name, provider, providerOrganizationId, providerMachineId, serialNumber, vin, model, make, category")))),Object(i.b)("p",null,"For more request examples see ",Object(i.b)("a",Object(n.a)({parentName:"p"},{href:"https://github.com/Leaf-Agriculture/Leaf-quickstart-Postman-collection"}),"Leaf Postman collection")),Object(i.b)(c.a,{defaultValue:"sh",values:[{label:"cURL",value:"sh"},{label:"Python",value:"py"},{label:"JavaScript",value:"js"}],mdxType:"Tabs"},Object(i.b)(b.a,{value:"js",mdxType:"TabItem"},Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-js"}),"const axios = require('axios')\nconst TOKEN = 'YOUR_TOKEN'\n\nconst endpoint ='https://api.withleaf.io/services/beta/api/users/{leafUserId}/machines'\nconst headers = { 'Authorization': `Bearer ${TOKEN}` }\n\naxios.get(endpoint, { headers })\n    .then(res => console.log(res.data))\n    .catch(console.error)\n"))),Object(i.b)(b.a,{value:"py",mdxType:"TabItem"},Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-python"}),"import requests\n\nTOKEN = 'YOUR_TOKEN'\n\nendpoint = 'https://api.withleaf.io/services/beta/api/users/{leafUserId}/machines'\nheaders = {'Authorization': f'Bearer {TOKEN}'}\n\nresponse = requests.get(endpoint, headers=headers)\nprint(response.json())\n"))),Object(i.b)(b.a,{value:"sh",mdxType:"TabItem"},Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-shell"}),"curl -X GET \\\n    -H 'Authorization: Bearer YOUR_TOKEN' \\\n    'https://api.withleaf.io/services/beta/api/users/{leafUserId}/machines'\n")))),Object(i.b)("h4",{id:"response"},"Response"),Object(i.b)("p",null,"The response is a JSON array containing machine records."),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-json"}),'[\n  {\n    "id": "UUID",\n    "leafUserId": "UUID",\n    "name": "str",\n    "provider": null,\n    "providerMachineId": null,\n    "providerOrganizationId": null,\n    "originType": "PROVIDER_POOLED",\n    "createdTime": "2022-02-22T20:06:25.411Z",\n    "serialNumber": "123456",\n    "vin": "1234567890ABC",\n    "model": "ModelName",\n    "make": "MakerOfMachine",\n    "category": "Sprayer",\n    "modelYear": 2000\n  },\n  {\n    "id": "UUID",\n    "leafUserId": "UUID",\n    "name": "str",\n    "provider": null,\n    "providerMachineId": null,\n    "providerOrganizationId": null,\n    "originType": "FILE_POOLED",\n    "createdTime": "2022-02-22T20:06:25.411Z",\n    "serialNumber": "123456",\n    "vin": "1234567890ABC",\n    "model": "ModelName",\n    "make": "MakerOfMachine",\n    "category": "Harvester",\n    "modelYear": 2020\n  }\n]\n')),Object(i.b)("h3",{id:"create-a-machine"},"Create a machine"),Object(i.b)("p",null,"\xa0",Object(i.b)("span",{class:"badge badge--success"},"POST"),"  ",Object(i.b)("inlineCode",{parentName:"p"},"/users/{leafUserId}/machines")),Object(i.b)("p",null,"Creates a machine for a specific LeafUser."),Object(i.b)("h4",{id:"request-body"},"Request body"),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-json"}),'{\n  "name": "str"\n}\n')),Object(i.b)(c.a,{defaultValue:"sh",values:[{label:"cURL",value:"sh"},{label:"Python",value:"py"},{label:"JavaScript",value:"js"}],mdxType:"Tabs"},Object(i.b)(b.a,{value:"js",mdxType:"TabItem"},Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-js"}),"const axios = require('axios')\nconst TOKEN = 'YOUR_TOKEN'\nconst endpoint = 'https://api.withleaf.io/services/beta/api/users/{leafUserId}/machines'\nconst headers = { 'Authorization': `Bearer ${TOKEN}` }\n\nconst data = {\n  name: \"str\"\n}\n\naxios.post(endpoint, data, { headers })\n    .then(res => console.log(res.data))\n    .catch(console.error)\n"))),Object(i.b)(b.a,{value:"py",mdxType:"TabItem"},Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-py"}),"import requests\n\nTOKEN = 'YOUR_TOKEN'\nendpoint = 'https://api.withleaf.io/services/beta/api/users/{leafUserId}/machines'\nheaders = {'Authorization': f'Bearer {TOKEN}'}\n\ndata = {\n  'name': 'str\"\n}\n\nresponse = requests.post(endpoint, headers=headers, json=data)\nprint(response.json())\n"))),Object(i.b)(b.a,{value:"sh",mdxType:"TabItem"},Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-shell"}),"curl -X POST \\\n    -H 'Authorization: Bearer YOUR_TOKEN' \\\n    -d '{ \"name\": \"str\"}' \\\n    'https://api.withleaf.io/services/beta/api/users/{leafUserId}/machines'\n")))),Object(i.b)("h4",{id:"response-1"},"Response"),Object(i.b)("p",null,"A new machine is assigned to the given LeafUserId."),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-json"}),'{\n  "id": "UUID",\n  "leafUserId": "UUID",\n  "name": "str",\n  "provider": null,\n  "providerMachineId": null,\n  "providerOrganizationId": null\n}\n')),Object(i.b)("h3",{id:"get-a-machine"},"Get a machine"),Object(i.b)("p",null,"\xa0",Object(i.b)("span",{class:"badge badge--success"},"GET"),"  ",Object(i.b)("inlineCode",{parentName:"p"},"/api/users/{leafUserId}/machines/{machineId}")),Object(i.b)("p",null,"Get the details of a given machine by its id."),Object(i.b)(c.a,{defaultValue:"sh",values:[{label:"cURL",value:"sh"},{label:"Python",value:"py"},{label:"JavaScript",value:"js"}],mdxType:"Tabs"},Object(i.b)(b.a,{value:"js",mdxType:"TabItem"},Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-js"}),"const axios = require('axios')\nconst TOKEN = 'YOUR_TOKEN'\nconst endpoint ='https://api.withleaf.io/services/beta/api/users/{leafUserId}/machines/{machineId}'\nconst headers = { 'Authorization': `Bearer ${TOKEN}` }\n\naxios.get(endpoint, { headers })\n    .then(res => console.log(res.data))\n    .catch(console.error)\n"))),Object(i.b)(b.a,{value:"py",mdxType:"TabItem"},Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-py"}),"import requests\n\nTOKEN = 'YOUR_TOKEN'\nendpoint = 'https://api.withleaf.io/services/beta/api/users/{leafUserId}/machines/{machineId}'\nheaders = {'Authorization': f'Bearer {TOKEN}'}\n\nresponse = requests.get(endpoint, headers=headers)\nprint(response.json())\n"))),Object(i.b)(b.a,{value:"sh",mdxType:"TabItem"},Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-shell"}),"curl -X GET \\\n    -H 'Authorization: Bearer YOUR_TOKEN' \\\n    'https://api.withleaf.io/services/beta/api/users/{leafUserId}/machines/{machineId}'\n")))),Object(i.b)("h4",{id:"response-2"},"Response"),Object(i.b)("p",null,"A machine record with more details."),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-json"}),'{\n  "id": "UUID",\n  "leafUserId": "UUID",\n  "name": "str",\n  "provider": null,\n  "providerMachineId": null,\n  "providerOrganizationId": null,\n  "originType": "PROVIDER_POOLED",\n  "createdTime": "2022-02-22T20:06:25.411Z",\n  "serialNumber": "123456",\n  "vin": "1234567890ABC",\n  "model": "ModelName",\n  "make": "MakerOfMachine",\n  "category": "Sprayer",\n  "modelYear": 2000\n}\n')),Object(i.b)("h3",{id:"get-machine-files"},"Get machine files"),Object(i.b)("p",null,"\xa0",Object(i.b)("span",{class:"badge badge--success"},"GET"),"  ",Object(i.b)("inlineCode",{parentName:"p"},"/api/users/{leafUserId}/machines/{machineId}/files")),Object(i.b)("p",null,"Get the details of machine operations files given a machine id. Some fields can be sent as query parameters to filter the machine files, such as:"),Object(i.b)("table",null,Object(i.b)("thead",{parentName:"table"},Object(i.b)("tr",{parentName:"thead"},Object(i.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Parameter (to filter by)"),Object(i.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Values"))),Object(i.b)("tbody",{parentName:"table"},Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(i.b)("inlineCode",{parentName:"td"},"leafFileId")),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"UUID")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(i.b)("inlineCode",{parentName:"td"},"originType")),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"specify the origin of the machine, must be either USER_CREATED, FILE_POOLED or PROVIDER_POOLED")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(i.b)("inlineCode",{parentName:"td"},"createdTime")),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"an ISO 8601 without timezone specifying the operation exact created time")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(i.b)("inlineCode",{parentName:"td"},"beforeCreatedTime")),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"filters for records created before the datetime, ISO 8601 without timezone")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(i.b)("inlineCode",{parentName:"td"},"afterCreatedTime")),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"filters for records created after the datetime, ISO 8601 without timezone")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(i.b)("inlineCode",{parentName:"td"},"startTime")),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"must match exactly the time of the start of the operation, ISO 8601 without timezone")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(i.b)("inlineCode",{parentName:"td"},"endTime")),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"must match exactly the time of the end of the operation, ISO 8601 without timezone")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(i.b)("inlineCode",{parentName:"td"},"beforeStartTime")),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"an ISO 8601 without timezone, returns all operations that started before the specified time")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(i.b)("inlineCode",{parentName:"td"},"afterStartTime")),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"an ISO 8601 without timezone, returns all operations that started after the specified time")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(i.b)("inlineCode",{parentName:"td"},"beforeEndTime")),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"an ISO 8601 without timezone, returns all operations that ended before the specified time")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(i.b)("inlineCode",{parentName:"td"},"afterEndTime")),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"an ISO 8601 without timezone, returns all operations that ended after the specified time")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(i.b)("inlineCode",{parentName:"td"},"distanceValue")),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"a double value for the distance")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(i.b)("inlineCode",{parentName:"td"},"greaterThanDistanceValue")),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"a double value for the distance, returns all operations that have a distance value greater than the specified distance")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(i.b)("inlineCode",{parentName:"td"},"lessThanDistanceValue")),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"a double value for the distance, returns all operations that have a distance value lesser than the specified distance")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(i.b)("inlineCode",{parentName:"td"},"distanceUnit")),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),'must be "Mile", "mile", "Feet" or "ft"')))),Object(i.b)("p",null,"You can also pass some parameters used exclusively for paging through results.\nThey are:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"page"),", an integer specifying the page being fetched (default is 0)"),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"size"),", an integer specifying the size of the page (max is 100)"),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"sort"),", the sorting order of the results; can be multivalue, the former takes precedence over the later; can also specify order as ",Object(i.b)("inlineCode",{parentName:"li"},"asc")," or ",Object(i.b)("inlineCode",{parentName:"li"},"desc")," with ",Object(i.b)("inlineCode",{parentName:"li"},"asc")," being the default. Example: id,desc",Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},"Valid values for sorting are: id, leafUserId, machineId, startTime, endTime, createdTime, leafFileId")))),Object(i.b)("p",null,"For more request examples see ",Object(i.b)("a",Object(n.a)({parentName:"p"},{href:"https://github.com/Leaf-Agriculture/Leaf-quickstart-Postman-collection"}),"Leaf Postman collection")),Object(i.b)(c.a,{defaultValue:"sh",values:[{label:"cURL",value:"sh"},{label:"Python",value:"py"},{label:"JavaScript",value:"js"}],mdxType:"Tabs"},Object(i.b)(b.a,{value:"js",mdxType:"TabItem"},Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-js"}),"const axios = require('axios')\nconst TOKEN = 'YOUR_TOKEN'\nconst endpoint ='https://api.withleaf.io/services/beta/api/users/{leafUserId}/machines/{machineId}/files'\nconst headers = { 'Authorization': `Bearer ${TOKEN}` }\n\naxios.get(endpoint, { headers })\n    .then(res => console.log(res.data))\n    .catch(console.error)\n"))),Object(i.b)(b.a,{value:"py",mdxType:"TabItem"},Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-py"}),"import requests\n\nTOKEN = 'YOUR_TOKEN'\nendpoint = 'https://api.withleaf.io/services/beta/api/users/{leafUserId}/machines/{machineId}/files'\nheaders = {'Authorization': f'Bearer {TOKEN}'}\n\nresponse = requests.get(endpoint, headers=headers)\nprint(response.json())\n"))),Object(i.b)(b.a,{value:"sh",mdxType:"TabItem"},Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-shell"}),"curl -X GET \\\n    -H 'Authorization: Bearer YOUR_TOKEN' \\\n    'https://api.withleaf.io/services/beta/api/users/{leafUserId}/machines/{machineId}/files'\n")))),Object(i.b)("h4",{id:"response-3"},"Response"),Object(i.b)("p",null,"A json array containing the machine operations files details."),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-json"}),'[\n  {\n    "id": "UUID",\n    "leafFileId": "UUID",\n    "machineId": "UUID",\n    "startTime": "YYYY-mm-ddThh:mm:ssZ",\n    "endTime": "YYYY-mm-ddThh:mm:ssZ",\n    "distance": {\n      "value": float,\n      "unit": "ft"\n    },\n    "fuelConsumption": {\n      "value": float,\n      "unit": "US gal"\n    }\n  },\n  {\n    "id": "UUID",\n    "leafFileId": "UUID",\n    "machineId": "UUID",\n    "startTime": "YYYY-mm-ddThh:mm:ssZ",\n    "endTime": "YYYY-mm-ddThh:mm:ssZ",\n    "distance": {\n      "value": float,\n      "unit": "ft"\n    },\n    "fuelConsumption": {\n      "value": float,\n      "unit": "US gal"\n    }\n  }\n]\n')),Object(i.b)("h3",{id:"delete-a-machine"},"Delete a machine"),Object(i.b)("p",null,"\xa0",Object(i.b)("span",{class:"badge badge--success"},"DELETE"),"  ",Object(i.b)("inlineCode",{parentName:"p"},"/api/users/{leafUserId}/machines/{machineId}")),Object(i.b)("p",null,"Delete a machine data"),Object(i.b)("div",{className:"admonition admonition-info alert alert--info"},Object(i.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-heading"}),Object(i.b)("h5",{parentName:"div"},Object(i.b)("span",Object(n.a)({parentName:"h5"},{className:"admonition-icon"}),Object(i.b)("svg",Object(n.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(i.b)("path",Object(n.a)({parentName:"svg"},{fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"})))),"Only machines created by the user can be Deleted")),Object(i.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-content"}),Object(i.b)("p",{parentName:"div"},"Machine data obtained from providers cannot be deleted"))),Object(i.b)(c.a,{defaultValue:"sh",values:[{label:"cURL",value:"sh"},{label:"Python",value:"py"},{label:"JavaScript",value:"js"}],mdxType:"Tabs"},Object(i.b)(b.a,{value:"js",mdxType:"TabItem"},Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-js"}),"const axios = require('axios')\nconst TOKEN = 'YOUR_TOKEN'\nconst endpoint ='https://api.withleaf.io/services/beta/api/users/{leafUserId}/machines/{machineId}'\nconst headers = { 'Authorization': `Bearer ${TOKEN}` }\n\naxios.delete(endpoint, { headers })\n    .then(res => console.log(res.data))\n    .catch(console.error)\n"))),Object(i.b)(b.a,{value:"py",mdxType:"TabItem"},Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-py"}),"import requests\n\nTOKEN = 'YOUR_TOKEN'\nendpoint = 'https://api.withleaf.io/services/beta/api/users/{leafUserId}/machines/{machineId}'\nheaders = {'Authorization': f'Bearer {TOKEN}'}\n\nresponse = requests.delete(endpoint, headers=headers)\nprint(response.json())\n"))),Object(i.b)(b.a,{value:"sh",mdxType:"TabItem"},Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-shell"}),"curl -X DELETE \\\n    -H 'Authorization: Bearer YOUR_TOKEN' \\\n    'https://api.withleaf.io/services/beta/api/users/{leafUserId}/machines/{machineId}'\n")))),Object(i.b)("h3",{id:"update-a-machine"},"Update a machine"),Object(i.b)("p",null,"\xa0",Object(i.b)("span",{class:"badge badge--success"},"PATCH"),"  ",Object(i.b)("inlineCode",{parentName:"p"},"/api/users/{leafUserId}/machines/{machineId}")),Object(i.b)("p",null,"Update a machine for a specific LeafUser. "),Object(i.b)("div",{className:"admonition admonition-info alert alert--info"},Object(i.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-heading"}),Object(i.b)("h5",{parentName:"div"},Object(i.b)("span",Object(n.a)({parentName:"h5"},{className:"admonition-icon"}),Object(i.b)("svg",Object(n.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(i.b)("path",Object(n.a)({parentName:"svg"},{fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"})))),"Only machines created by the user can be updated")),Object(i.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-content"}),Object(i.b)("p",{parentName:"div"},"Machine data obtained from providers cannot be updated"))),Object(i.b)(c.a,{defaultValue:"sh",values:[{label:"cURL",value:"sh"},{label:"Python",value:"py"},{label:"JavaScript",value:"js"}],mdxType:"Tabs"},Object(i.b)(b.a,{value:"js",mdxType:"TabItem"},Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-js"}),"const axios = require('axios')\nconst TOKEN = 'YOUR_TOKEN'\nconst endpoint = 'https://api.withleaf.io/services/beta/api/users/{leafUserId}/machines/{machineId}'\nconst headers = { 'Authorization': `Bearer ${TOKEN}` }\n\nconst data = {\n  name: \"str\"\n}\n\naxios.patch(endpoint, data, { headers })\n    .then(res => console.log(res.data))\n    .catch(console.error)\n"))),Object(i.b)(b.a,{value:"py",mdxType:"TabItem"},Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-py"}),"import requests\n\nTOKEN = 'YOUR_TOKEN'\nendpoint = 'https://api.withleaf.io/services/beta/api/users/{leafUserId}/machines/{machineId}'\nheaders = {'Authorization': f'Bearer {TOKEN}'}\n\ndata = {\n  'name': 'str\"\n}\n\nresponse = requests.patch(endpoint, headers=headers, json=data)\nprint(response.json())\n"))),Object(i.b)(b.a,{value:"sh",mdxType:"TabItem"},Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-shell"}),"curl -X PATCH \\\n    -H 'Authorization: Bearer YOUR_TOKEN' \\\n    -d '{ \"name\": \"str\"}' \\\n    'https://api.withleaf.io/services/beta/api/users/{leafUserId}/machines/{machineId}'\n")))))}p.isMDXComponent=!0},126:function(e,t,a){"use strict";a.d(t,"a",(function(){return d})),a.d(t,"b",(function(){return u}));var n=a(0),r=a.n(n);function i(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function c(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function b(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?c(Object(a),!0).forEach((function(t){i(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):c(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var s=r.a.createContext({}),o=function(e){var t=r.a.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):b(b({},t),e)),a},d=function(e){var t=o(e.components);return r.a.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},m=r.a.forwardRef((function(e,t){var a=e.components,n=e.mdxType,i=e.originalType,c=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),d=o(a),m=n,u=d["".concat(c,".").concat(m)]||d[m]||p[m]||i;return a?r.a.createElement(u,b(b({ref:t},s),{},{components:a})):r.a.createElement(u,b({ref:t},s))}));function u(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=a.length,c=new Array(i);c[0]=m;var b={};for(var l in t)hasOwnProperty.call(t,l)&&(b[l]=t[l]);b.originalType=e,b.mdxType="string"==typeof e?e:n,c[1]=b;for(var s=2;s<i;s++)c[s]=a[s];return r.a.createElement.apply(null,c)}return r.a.createElement.apply(null,a)}m.displayName="MDXCreateElement"},127:function(e,t,a){"use strict";var n=a(0),r=a(20);t.a=function(){var e=Object(n.useContext)(r.a);if(null===e)throw new Error("Docusaurus context not provided");return e}},128:function(e,t,a){"use strict";function n(e){var t,a,r="";if("string"==typeof e||"number"==typeof e)r+=e;else if("object"==typeof e)if(Array.isArray(e))for(t=0;t<e.length;t++)e[t]&&(a=n(e[t]))&&(r&&(r+=" "),r+=a);else for(t in e)e[t]&&(r&&(r+=" "),r+=t);return r}t.a=function(){for(var e,t,a=0,r="";a<arguments.length;)(e=arguments[a++])&&(t=n(e))&&(r&&(r+=" "),r+=t);return r}},129:function(e,t,a){"use strict";a.d(t,"b",(function(){return i})),a.d(t,"a",(function(){return c}));var n=a(127),r=a(134);function i(){var e=Object(n.a)().siteConfig,t=(e=void 0===e?{}:e).baseUrl,a=void 0===t?"/":t,i=e.url;return{withBaseUrl:function(e,t){return function(e,t,a,n){var i=void 0===n?{}:n,c=i.forcePrependBaseUrl,b=void 0!==c&&c,l=i.absolute,s=void 0!==l&&l;if(!a)return a;if(a.startsWith("#"))return a;if(Object(r.b)(a))return a;if(b)return t+a;var o=!a.startsWith(t)?t+a.replace(/^\//,""):a;return s?e+o:o}(i,a,e,t)}}}function c(e,t){return void 0===t&&(t={}),(0,i().withBaseUrl)(e,t)}},130:function(e,t,a){"use strict";var n=a(0),r=Object(n.createContext)(void 0);t.a=r},131:function(e,t,a){"use strict";var n=a(0),r=a(130);t.a=function(){var e=Object(n.useContext)(r.a);if(null==e)throw new Error("`useUserPreferencesContext` is used outside of `Layout` Component.");return e}},132:function(e,t,a){"use strict";var n=a(0),r=a.n(n),i=a(131),c=a(128),b=a(48),l=a.n(b),s=37,o=39;t.a=function(e){var t=e.block,a=e.children,b=e.defaultValue,d=e.values,p=e.groupId,m=Object(i.a)(),u=m.tabGroupChoices,O=m.setTabGroupChoices,j=Object(n.useState)(b),h=j[0],f=j[1],N=Object(n.useState)(!1),g=N[0],v=N[1];if(null!=p){var y=u[p];null!=y&&y!==h&&d.some((function(e){return e.value===y}))&&f(y)}var T=function(e){f(e),null!=p&&O(p,e)},I=[],E=function(e){e.metaKey||e.altKey||e.ctrlKey||v(!0)},U=function(){v(!1)};return Object(n.useEffect)((function(){window.addEventListener("keydown",E),window.addEventListener("mousedown",U)}),[]),r.a.createElement("div",null,r.a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:Object(c.a)("tabs",{"tabs--block":t})},d.map((function(e){var t=e.value,a=e.label;return r.a.createElement("li",{role:"tab",tabIndex:0,"aria-selected":h===t,className:Object(c.a)("tabs__item",l.a.tabItem,{"tabs__item--active":h===t}),style:g?{}:{outline:"none"},key:t,ref:function(e){return I.push(e)},onKeyDown:function(e){!function(e,t,a){switch(a.keyCode){case o:!function(e,t){var a=e.indexOf(t)+1;e[a]?e[a].focus():e[0].focus()}(e,t);break;case s:!function(e,t){var a=e.indexOf(t)-1;e[a]?e[a].focus():e[e.length-1].focus()}(e,t)}}(I,e.target,e),E(e)},onFocus:function(){return T(t)},onClick:function(){T(t),v(!1)},onPointerDown:function(){return v(!1)}},a)}))),r.a.createElement("div",{role:"tabpanel",className:"margin-vert--md"},n.Children.toArray(a).filter((function(e){return e.props.value===h}))[0]))}},133:function(e,t,a){"use strict";var n=a(0),r=a.n(n);t.a=function(e){return r.a.createElement("div",null,e.children)}},134:function(e,t,a){"use strict";function n(e){return!0===/^(\w*:|\/\/)/.test(e)}function r(e){return void 0!==e&&!n(e)}a.d(t,"b",(function(){return n})),a.d(t,"a",(function(){return r}))}}]);